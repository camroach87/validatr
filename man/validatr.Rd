% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init-validatr.R
\name{validatr}
\alias{validatr}
\title{Initialise validatr object}
\usage{
validatr(data, data_type = "regression", k = 10, start = NULL,
  horizon = NULL, shift = NULL, ts = NULL)
}
\arguments{
\item{data}{data frame containing variables for modelling.}

\item{k}{integer. Number of folds.}

\item{type}{string specify the data structure and cross-validation to be
carried out. Can be one of ts, regression or classification.}
}
\value{
\code{validatr} returns an initial validatr object. This object contains cross
validation folds and validation parameters.
}
\description{
Initialises a validatr object.
}
\details{
The type of data being tested influences how the validatr and it's methods
respond. The following types are supported and are specified using the type
parameter.
\itemize{
\item \strong{regression} regression data.
\item \strong{ts} time-series data.
\item \strong{classification} classification data.
}

The type of cross-validation and accuracy measures to be calculated are
influenced by this parameter. For regression, k-fold cross-validation is
carried out and requires the number of folds \code{k} to be specified. Leave one
out cross-validation can easily be accomplished by setting \code{k} equal to the
number of observations.

For time-series, time-series cross-validation takes place. This requires the
\code{start}, \code{horizon}, \code{shift} and \code{ts} arguments to be specified:
\itemize{
\item \code{start} is the start of the first fold.
\item \code{horizon} is the length of the fold.
\item \code{shift} is the length of time to move forward.
\item \code{ts} is the name of the variable containing time-series data.
}

Finally, classification carries out k-fold cross validation as well, but its
accruacy measures will be different to regression.
}
\examples{

validatr_obj <- validatr(iris, data_type = "regression", k = 5)
head(validatr_obj$folds[[5]]$train)
head(validatr_obj$folds[[5]]$validation)
}
